<Project>
	<!-- Uno Developers should comment this target out if they need to override UnoVersion for dev testing -->
	<Target Name="UnoSdkVersionCheck"
			AfterTargets="ResolveReferences"
			BeforeTargets="BeforeBuild"
			Condition="'$(PkgUno_WinUI)' != ''">
		<Error Code="UNOB0004"
			HelpLink="https://aka.platform.uno/UNOB0004"
			Text="The '%24(UnoVersion)' property must match the version of the Uno.Sdk defined in global.json (found $(UnoVersion) and expected DefaultUnoVersion). For more information about updating Uno Platform packages, visit https://aka.platform.uno/upgrade-uno-packages"
			Condition=" '$(UnoVersion)' != 'DefaultUnoVersion' " />

		<!-- Check if the Uno.WinUI version matches DefaultUnoVersion -->
		<PropertyGroup>
			<_UnoSdkVersionCheck_Resolved_UnoWinUI>$([System.IO.Path]::GetFileName($(PkgUno_WinUI)))</_UnoSdkVersionCheck_Resolved_UnoWinUI>
		</PropertyGroup>

		<Error Code="UNOB0005"
			HelpLink="https://aka.platform.uno/UNOB0005"
			Text="The version of Uno.WinUI must match the version of the Uno.Sdk found in global.json (found $(_UnoSdkVersionCheck_Resolved_UnoWinUI) and expected DefaultUnoVersion). For more information about updating Uno Platform packages, visit https://aka.platform.uno/upgrade-uno-packages"
			Condition="$(_UnoSdkVersionCheck_Resolved_UnoWinUI) != 'DefaultUnoVersion'" />
	</Target>

	<!--
		This prevents other targets from accidently picking up files that are in the Platforms 
		directory but not part of the current TargetFramework
	-->
	<Target Name="RemoveUnoSingleProjectPlatformFiles"
		BeforeTargets="PrepareForBuild"
		Condition="$(SingleProject) == 'true'">
		<ItemGroup>
			<None Remove="@(_IgnorePlatformFiles)" />
			<Compile Remove="@(_IgnorePlatformFiles)" />
			<Content Remove="@(_IgnorePlatformFiles)" />
			<EmbeddedResource Remove="@(_IgnorePlatformFiles)" />
			<Manifest Remove="@(_IgnorePlatformFiles)" />
			<AppxManifest Remove="@(_IgnorePlatformFiles)" />
		</ItemGroup>
	</Target>
</Project>
